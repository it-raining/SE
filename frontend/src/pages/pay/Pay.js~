import React, { useState } from "react";
import "../../App.css";
import "./Pay.css";
import Avatar from "../../assets/avatar.png";

function Pay() {
  const [soDu, setSoDu] = useState(0); // S·ªë d∆∞ ban ƒë·∫ßu
  const [soLuaCanNap, setSoLuaCanNap] = useState(""); // S·ªë l√∫a c·∫ßn n·∫°p
  const [showConfirmDialog, setShowConfirmDialog] = useState(false); // State to control confirmation dialog visibility
  const [pendingNapLua, setPendingNapLua] = useState(0); // Store the pending amount to be added to the balance
  const handleNapLua = () => {
    const soLua = parseInt(soLuaCanNap, 10); // Chuy·ªÉn chu·ªói th√†nh s·ªë nguy√™n
    if (!isNaN(soLua) && soLua >= 5000) {
      setPendingNapLua(soLua); // Store the amount to be confirmed
      setShowConfirmDialog(true); // Show the confirmation dialog
      setSoLuaCanNap(""); // Reset input field
    } else {
      alert("Vui l√≤ng nh·∫≠p s·ªë l√∫a h·ª£p l·ªá (t·ªëi thi·ªÉu 5000 L√∫a)!");
    }
  };

  const handleConfirm = () => {
    // Th√™m s·ªë l√∫a v√†o s·ªë d∆∞
    setSoDu(soDu + pendingNapLua); 

    // ƒê√≥ng dialog v√† reset tr·∫°ng th√°i
    setShowConfirmDialog(false);
    setPendingNapLua(0);
  };

  const handleCancel = () => {
    setShowConfirmDialog(false); // Close the dialog without changes
    setPendingNapLua(0); // Reset pending amount
  };

  return (
    <div className="Pay">
      <div className="Payment">
        <p>Thanh to√°n </p>
      </div>

      <div className="Info">
        <div className="Info-image">
          <img src={Avatar} alt="Avatar" />
        </div>

        <div className="Info-content">
          <h3>H·ªç v√† t√™n</h3>
          <h3>S·ªë d∆∞: {soDu.toLocaleString()} üåæ</h3>
        </div>
      </div>

      <div className="Nap">
        <div className="Need">
          <label htmlFor="soLuaCanNap"><b>S·ªë l√∫a c·∫ßn n·∫°p: </b></label>
          <input
            type="number"
            id="soLuaCanNap"
            value={soLuaCanNap}
            onChange={(e) => setSoLuaCanNap(e.target.value)}
            style={{
              marginLeft: "10px",
              padding: "5px",
              borderRadius: "4px",
              border: "1px solid #ccc",
              height: "30px"
            }}
            placeholder="Nh·∫≠p s·ªë l√∫a"
          />
          <p>T·ªëi thi·ªÉu 5000 L√∫a</p>
        </div>

        <div className="NhanNap">
          <button
            onClick={handleNapLua}
            style={{
              padding: "10px 20px",
              backgroundColor: "#4CAF50",
              color: "white",
              border: "none",
              borderRadius: "4px",
              cursor: "pointer",
            }}
          >
            N·∫°p L√∫a
          </button>
          <p>1,000VND = 1000 l√∫a</p>
        </div>
      </div>

      {/* Confirmation Dialog */}
      {showConfirmDialog && (
        <div className="ConfirmDialog">
          <div className="ConfirmDialog-content">
            <h4>X√°c nh·∫≠n n·∫°p l√∫a</h4>
            <p>S·ªë l√∫a: <b>{pendingNapLua.toLocaleString()}</b> </p>
            <p>S·ªë ti·ªÅn c·∫ßn tr·∫£: <b>{pendingNapLua.toLocaleString()} VND</b></p>
            <div className="ConfirmDialog-buttons">
              <button onClick={handleConfirm} style={{ backgroundColor: "#4CAF50", color: "white" }}>X√°c nh·∫≠n</button>
              <button onClick={handleCancel} style={{ backgroundColor: "#f44336", color: "white" }}>H·ªßy</button>
            </div>
          </div>
        </div>
      )}

      {/* L·ªãch s·ª≠ n·∫°p ti·ªÅn */}
      <div className="Hiss">
      <div className="History">
        <h3>L·ªãch s·ª≠ n·∫°p ti·ªÅn</h3>
        <div className="History-list">
          {history.length > 0 ? (
            history.map((item) => (
              <div className="History-item" key={item.id}>
                <div>
                  <p>{item.description}</p>
                  <span>{item.time}</span>
                </div>
                <div>
                  <strong>{item.amount.toLocaleString()} üåæ</strong>
                </div>
              </div>
            ))
          ) : (
            <p>Ch∆∞a c√≥ l·ªãch s·ª≠ n·∫°p ti·ªÅn.</p>
          )}
        </div>
      </div>

      <div className="PaymentHistory">
          <h3>L·ªãch s·ª≠ thanh to√°n</h3>
          <div className="History-list">
            {paymentHistory.length > 0 ? (
              paymentHistory.map((item) => (
                <div className="History-item" key={item.id}>
                  <div>
                    <p>{item.description}</p>
                    <span>{item.time}</span>
                  </div>
                  <div>
                    <strong>{item.amount.toLocaleString()} üåæ</strong>
                  </div>
                </div>
              ))
            ) : (
              <p>Ch∆∞a c√≥ l·ªãch s·ª≠ thanh to√°n.</p>
            )}
          </div>
        </div>
        </div>
    </div>
  );
}

export default Pay;